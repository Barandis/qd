// Copyright (c) 2019 Thomas Otterson
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

use crate::quad::Quad;

pub const INV_FACTS: [Quad; 15] = [
    Quad(
        1.666_666_666_666_666_6e-1,
        9.251_858_538_542_97e-18,
        5.135_813_185_032_629e-34,
        2.850_949_024_098_342_3e-50,
    ),
    Quad(
        4.166_666_666_666_666_4e-2,
        2.312_964_634_635_742_7e-18,
        1.283_953_296_258_157_2e-34,
        7.127_372_560_245_855e-51,
    ),
    Quad(
        8.333_333_333_333_333e-3,
        1.156_482_317_317_871_4e-19,
        1.604_941_620_322_696_5e-36,
        2.227_303_925_076_82e-53,
    ),
    Quad(
        1.388_888_888_888_889e-3,
        -5.300_543_954_373_577e-20,
        -1.738_686_755_349_587_8e-36,
        -1.633_356_211_723_008_4e-52,
    ),
    Quad(
        1.984_126_984_126_984e-4,
        1.720_955_829_342_070_5e-22,
        1.492_691_239_139_412_7e-40,
        1.294_703_267_476_657_3e-58,
    ),
    Quad(
        2.480_158_730_158_73e-5,
        2.151_194_786_677_588_2e-23,
        1.865_864_048_924_266e-41,
        1.618_379_084_384_342_5e-59,
    ),
    Quad(
        2.755_731_922_398_589_3e-6,
        -1.858_393_274_046_472e-22,
        8.491_754_604_881_993e-39,
        -5.726_616_407_894_298e-55,
    ),
    Quad(
        2.755_731_922_398_589e-7,
        2.376_771_462_225_029_7e-23,
        -3.263_188_903_340_883e-40,
        1.614_351_118_604_043_2e-56,
    ),
    Quad(
        2.505_210_838_544_172e-8,
        -1.448_814_070_935_912e-24,
        2.042_673_514_671_445_5e-41,
        -8.496_326_720_071_63e-58,
    ),
    Quad(
        2.087_675_698_786_81e-9,
        -1.207_345_059_113_26e-25,
        1.702_227_928_892_871e-42,
        1.416_095_321_503_967_2e-58,
    ),
    Quad(
        1.605_904_383_682_161_3e-10,
        1.258_529_458_875_209_8e-26,
        -5.313_346_027_629_85e-43,
        3.540_214_725_976_055e-59,
    ),
    Quad(
        1.147_074_559_772_972_5e-11,
        2.065_551_275_283_074_5e-28,
        6.889_079_232_466_646e-45,
        5.729_200_026_551_091_6e-61,
    ),
    Quad(
        7.647_163_731_819_816e-13,
        7.038_728_777_334_53e-30,
        -7.827_539_277_162_583e-48,
        1.921_386_494_437_835_6e-64,
    ),
    Quad(
        4.779_477_332_387_385e-14,
        4.399_205_485_834_081e-31,
        -4.892_212_048_226_615e-49,
        1.200_866_559_023_605_5e-65,
    ),
    Quad(
        2.811_457_254_345_520_6e-15,
        1.650_884_273_086_143_3e-31,
        -2.877_771_793_074_479e-50,
        4.271_106_892_562_081e-67,
    ),
];

/// Helper function that efficiently multiplies a Quad by a power of 2. This is -much-
/// faster than regular multiplication but only works with powers of 2.
#[inline]
pub fn mul_pwr2(a: Quad, b: f64) -> Quad {
    Quad(a.0 * b, a.1 * b, a.2 * b, a.3 * b)
}
